"use client";

import { useEffect, useState } from "react";
import { getWeatherData } from '../../lib/fetchWeather'
import { WiDaySunny, WiCloud, WiRain, WiSnow, WiThunderstorm, WiHumidity, WiStrongWind } from "react-icons/wi";
import Bot from "../GeminiBot/Bot";
import { WeatherIcons, WeatherResponse, SysData, WindData, MainWeatherData, WeatherCondition } from "@/utils/types";
import LocationContainer from "../home/LocationContainer";
import dynamic from "next/dynamic";


// Dynamic import with no SSR
const TouristMap = dynamic(() => import('../map/TouristMap'), { ssr: false });

export default function Weatherapi() {
  // ‡∏ö‡∏∏‡∏£‡∏µ‡∏£‡∏±‡∏°‡∏¢‡πå‡πÅ‡∏•‡∏∞‡∏≠‡∏≥‡πÄ‡∏†‡∏≠‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç
  const buriramDistricts = [
    "Buriram", // ‡πÄ‡∏°‡∏∑‡∏≠‡∏á‡∏ö‡∏∏‡∏£‡∏µ‡∏£‡∏±‡∏°‡∏¢‡πå
    "Nang Rong", // ‡∏ô‡∏≤‡∏á‡∏£‡∏≠‡∏á
    "Prakhon Chai", // ‡∏õ‡∏£‡∏∞‡πÇ‡∏Ñ‡∏ô‡∏ä‡∏±‡∏¢
    "Lam Plai Mat", // ‡∏•‡∏≥‡∏õ‡∏•‡∏≤‡∏¢‡∏°‡∏≤‡∏®
    "Satuek" // ‡∏™‡∏ï‡∏∂‡∏Å
  ];

  const [selectedCity, setSelectedCity] = useState<string>("Buriram");
  const [weather, setWeather] = useState<WeatherResponse | null>(null);
  const [loading, setLoading] = useState<boolean>(true);
  const [error, setError] = useState<string | null>(null);
  const [timeOfDay, setTimeOfDay] = useState<string>("‡∏Å‡∏•‡∏≤‡∏á‡∏ß‡∏±‡∏ô");
  const [isClient, setIsClient] = useState(false);

  useEffect(() => {
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô (‡∏Å‡∏•‡∏≤‡∏á‡∏ß‡∏±‡∏ô/‡∏Å‡∏•‡∏≤‡∏á‡∏Ñ‡∏∑‡∏ô)
    const currentHour = new Date().getHours();
    setTimeOfDay(currentHour >= 6 && currentHour < 18 ? "‡∏Å‡∏•‡∏≤‡∏á‡∏ß‡∏±‡∏ô" : "‡∏Å‡∏•‡∏≤‡∏á‡∏Ñ‡∏∑‡∏ô");

    async function fetchData() {
      try {
        setLoading(true);
        setError(null);
        const data = await getWeatherData(selectedCity);
        setWeather(data);
      } catch (error) {
        console.error("Error fetching weather data:", error);
        setError("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏†‡∏≤‡∏û‡∏≠‡∏≤‡∏Å‡∏≤‡∏®‡πÑ‡∏î‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á");
      } finally {
        setLoading(false);
      }
    }
    fetchData();
  }, [selectedCity]);

  useEffect(() => {
    setIsClient(true);
  }, []);

  const weatherIcons: WeatherIcons = {
    Clear: <WiDaySunny className="text-yellow-400 text-7xl" />,
    Clouds: <WiCloud className="text-gray-300 text-7xl" />,
    Rain: <WiRain className="text-blue-300 text-7xl" />,
    Snow: <WiSnow className="text-white text-7xl" />,
    Thunderstorm: <WiThunderstorm className="text-purple-400 text-7xl" />,
  };

  const googleMapsApiKey: string = process.env.NEXT_PUBLIC_GOOGLE_API_KEY || '';

  // ‡∏≠‡∏≥‡πÄ‡∏†‡∏≠‡πÅ‡∏•‡∏∞‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡πà‡∏≠‡∏á‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏ô‡∏ö‡∏∏‡∏£‡∏µ‡∏£‡∏±‡∏°‡∏¢‡πå
  const touristSpots = [
    {
      name: "‡∏õ‡∏£‡∏≤‡∏™‡∏≤‡∏ó‡∏û‡∏ô‡∏°‡∏£‡∏∏‡πâ‡∏á",
      district: "Prakhon Chai",
      description: "‡∏õ‡∏£‡∏≤‡∏™‡∏≤‡∏ó‡∏Ç‡∏≠‡∏°‡πÇ‡∏ö‡∏£‡∏≤‡∏ì‡∏ö‡∏ô‡∏¢‡∏≠‡∏î‡∏†‡∏π‡πÄ‡∏Ç‡∏≤‡πÑ‡∏ü‡∏ó‡∏µ‡πà‡∏î‡∏±‡∏ö‡πÅ‡∏•‡πâ‡∏ß ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡∏∂‡πâ‡∏ô‡πÉ‡∏ô‡∏û‡∏∏‡∏ó‡∏ò‡∏®‡∏ï‡∏ß‡∏£‡∏£‡∏©‡∏ó‡∏µ‡πà 15-16",
      image: "/images/phanom-rung.jpg"
    },
    {
      name: "‡∏≠‡∏∏‡∏ó‡∏¢‡∏≤‡∏ô‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå‡∏õ‡∏£‡∏≤‡∏™‡∏≤‡∏ó‡πÄ‡∏°‡∏∑‡∏≠‡∏á‡∏ï‡πà‡∏≥",
      district: "Prakhon Chai",
      description: "‡∏õ‡∏£‡∏≤‡∏™‡∏≤‡∏ó‡∏Ç‡∏≠‡∏°‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏ö‡∏≤‡∏£‡∏≤‡∏¢‡∏ô‡πâ‡∏≥ ‡∏™‡∏∞‡∏ó‡πâ‡∏≠‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡πÉ‡∏ô‡∏®‡∏≤‡∏™‡∏ô‡∏≤‡∏Æ‡∏¥‡∏ô‡∏î‡∏π",
      image: "/images/muang-tam.jpg"
    },
    {
      name: "‡∏™‡∏ô‡∏≤‡∏°‡∏ü‡∏∏‡∏ï‡∏ö‡∏≠‡∏•‡∏ä‡πâ‡∏≤‡∏á ‡∏≠‡∏≤‡∏£‡∏µ‡∏ô‡∏≤",
      district: "Buriram",
      description: "‡∏™‡∏ô‡∏≤‡∏°‡∏ü‡∏∏‡∏ï‡∏ö‡∏≠‡∏•‡∏ö‡∏∏‡∏£‡∏µ‡∏£‡∏±‡∏°‡∏¢‡πå ‡∏¢‡∏π‡πÑ‡∏ô‡πÄ‡∏ï‡πá‡∏î ‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô‡∏£‡∏∞‡∏î‡∏±‡∏ö‡πÇ‡∏•‡∏Å",
      image: "/images/chang-arena.jpg"
    },
    {
      name: "‡∏ä‡πâ‡∏≤‡∏á ‡∏≠‡∏¥‡∏ô‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÄ‡∏ô‡∏ä‡∏±‡πà‡∏ô‡πÅ‡∏ô‡∏• ‡πÄ‡∏ã‡∏≠‡∏£‡πå‡∏Å‡∏¥‡∏ï",
      district: "Buriram",
      description: "‡∏™‡∏ô‡∏≤‡∏°‡πÅ‡∏Ç‡πà‡∏á‡∏£‡∏ñ‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô‡∏£‡∏∞‡∏î‡∏±‡∏ö‡πÇ‡∏•‡∏Å‡∏ó‡∏µ‡πà‡πÉ‡∏´‡∏ç‡πà‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î‡πÉ‡∏ô‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®‡πÑ‡∏ó‡∏¢",
      image: "/images/circuit.jpg"
    }
  ];

  // ‡∏Å‡∏£‡∏≠‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡πà‡∏≠‡∏á‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß‡∏ï‡∏≤‡∏°‡∏≠‡∏≥‡πÄ‡∏†‡∏≠‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
  const filteredSpots = touristSpots.filter(spot =>
    spot.district === selectedCity || selectedCity === "Buriram"
  );

  return (
    <div
      className="min-h-screen bg-cover bg-center bg-no-repeat text-gray-900 dark:text-white flex flex-col items-center py-4 px-4 relative"
      style={{
        backgroundImage: timeOfDay === "‡∏Å‡∏•‡∏≤‡∏á‡∏ß‡∏±‡∏ô"
          ? "url('/images/buriram-bg-day.jpg')"
          : "url('/images/buriram-bg-night.jpg')",
        backgroundAttachment: "fixed"
      }}
    >
      {/* Overlay ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏≥‡πÉ‡∏´‡πâ background ‡∏ô‡∏∏‡πà‡∏°‡∏ï‡∏≤ */}
      <div className="absolute inset-0 bg-gradient-to-b from-blue-900/20 via-transparent to-blue-900/30 pointer-events-none"></div>

      {/* Header Section - ‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡πÉ‡∏´‡∏°‡πà */}
      <div className="relative z-10 bg-gradient-to-r from-blue-600/90 via-purple-600/90 to-pink-600/90 backdrop-blur-xl p-8 rounded-3xl mb-8 w-full shadow-2xl border border-white/20">
        <div className="text-center space-y-4">
          {/* Main Title */}
          <div className="flex items-center justify-center space-x-4 mb-4">
            <div className="text-5xl animate-pulse">üèõÔ∏è</div>
            <h1 className="text-4xl p-6 lg:text-6xl font-bold bg-clip-text text-transparent bg-gradient-to-r from-white via-yellow-200 to-orange-200 drop-shadow-2xl">
              ‡πÑ‡∏õ‡πÑ‡∏´‡∏ô‡∏î‡∏µ? ‡∏ö‡∏∏‡∏£‡∏µ‡∏£‡∏±‡∏°‡∏¢‡πå
            </h1>
            <div className="text-5xl animate-pulse">‚õÖ</div>
          </div>

          {/* English Subtitle */}
          <h2 className="text-xl lg:text-2xl font-semibold text-white/90 tracking-wider">
            BURIRAM LOCAL EXPERIENCE
          </h2>

          {/* Description */}
          <div className="bg-white/20 backdrop-blur-sm rounded-2xl p-4 mt-6">
            <p className="text-lg lg:text-xl text-white font-medium">
              üåü ‡∏™‡∏≥‡∏£‡∏ß‡∏à‡∏ó‡∏µ‡πà‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß ¬∑ ‡πÄ‡∏ä‡πá‡∏Ñ‡∏™‡∏†‡∏≤‡∏û‡∏≠‡∏≤‡∏Å‡∏≤‡∏® ¬∑ ‡πÅ‡∏ä‡∏ó‡∏Å‡∏±‡∏ö‡∏ö‡∏≠‡∏ó‡∏ô‡πà‡∏≤‡∏£‡∏±‡∏Å‡πÜ üåü
            </p>
            <p className="text-sm lg:text-base text-white/80 mt-2">
              ‡∏£‡∏ß‡∏°‡∏ó‡∏∏‡∏Å‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏π‡πâ‡∏Å‡πà‡∏≠‡∏ô‡πÑ‡∏õ‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß‡∏ö‡∏∏‡∏£‡∏µ‡∏£‡∏±‡∏°‡∏¢‡πå - ‡∏à‡∏≤‡∏Å‡∏õ‡∏£‡∏≤‡∏™‡∏≤‡∏ó‡∏´‡∏¥‡∏ô‡∏ñ‡∏∂‡∏á‡∏£‡πâ‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏Å‡∏¥‡∏ô‡∏ó‡πâ‡∏≠‡∏á‡∏ñ‡∏¥‡πà‡∏ô
            </p>
          </div>
        </div>
      </div>


      {/* ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏≥‡πÄ‡∏†‡∏≠ - ‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡πÉ‡∏´‡∏°‡πà */}
      <div className="relative z-10 w-full max-w-auto mb-8">
        <div className="bg-white/95 dark:bg-gray-800/95 backdrop-blur-xl p-6 rounded-2xl shadow-2xl border border-gray-200/50 dark:border-gray-700/50">
          <div className="text-center mb-4">
            <h3 className="text-2xl font-bold text-gray-800 dark:text-white mb-2">
              üìç ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏†‡∏≤‡∏û‡∏≠‡∏≤‡∏Å‡∏≤‡∏®
            </h3>
            {/* <p className="text-gray-600 dark:text-gray-300">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏≥‡πÄ‡∏†‡∏≠‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏†‡∏≤‡∏û‡∏≠‡∏≤‡∏Å‡∏≤‡∏®‡πÅ‡∏•‡∏∞‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ô‡πà‡∏≤‡∏™‡∏ô‡πÉ‡∏à</p> */}
          </div>
          <div className="flex flex-wrap gap-4 justify-center">
            {buriramDistricts.map((district) => (
              <button
                key={district}
                onClick={() => setSelectedCity(district)}
                className={`px-6 py-3 rounded-2xl text-lg font-semibold transition-all duration-300 transform hover:scale-105 shadow-lg ${selectedCity === district
                  ? "bg-gradient-to-r from-blue-500 to-purple-600 text-white shadow-blue-500/50"
                  : "bg-gradient-to-r from-gray-100 to-gray-200 dark:from-gray-700 dark:to-gray-600 text-gray-800 dark:text-white hover:from-blue-100 hover:to-purple-100 dark:hover:from-blue-800 dark:hover:to-purple-800"
                  }`}
              >
                {district}
              </button>
            ))}
          </div>
        </div>
      </div>

      {/* ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏´‡∏•‡∏±‡∏Å‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö flex ‡πÅ‡∏ô‡∏ß‡∏ô‡∏≠‡∏ô */}
      <div className="relative z-10 w-full max-w-auto flex flex-col lg:flex-row gap-8 items-start">
        {/* ‡∏™‡πà‡∏ß‡∏ô‡∏ã‡πâ‡∏≤‡∏¢ - ‡∏™‡∏†‡∏≤‡∏û‡∏≠‡∏≤‡∏Å‡∏≤‡∏® */}
        <div className="flex-1 w-full min-h-0 flex flex-col gap-8">
          {error && (
            <div className="bg-gradient-to-r from-red-100 to-pink-100 dark:from-red-900/50 dark:to-pink-900/50 p-6 rounded-2xl text-red-700 dark:text-red-200 shadow-xl border border-red-200/50">
              <div className="flex items-center">
                <div className="text-3xl mr-4">‚ö†Ô∏è</div>
                <p className="text-lg font-semibold">{error}</p>
              </div>
            </div>
          )}

          {loading && (
            <div className="bg-white/95 dark:bg-gray-800/95 backdrop-blur-xl p-10 rounded-3xl shadow-2xl text-center border border-gray-300/50 dark:border-white/20">
              <div className="flex items-center justify-center mb-6">
                <div className="relative">
                  <div className="animate-spin rounded-full h-16 w-16 border-t-4 border-b-4 border-blue-500"></div>
                  <div className="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-2xl">‚õÖ</div>
                </div>
              </div>
              <p className="text-2xl font-semibold text-gray-800 dark:text-white">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏†‡∏≤‡∏û‡∏≠‡∏≤‡∏Å‡∏≤‡∏®...</p>
              <p className="text-gray-600 dark:text-gray-300 mt-2">‡πÇ‡∏õ‡∏£‡∏î‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà</p>
            </div>
          )}

          {weather && !loading && (
            <div className="bg-white/95 dark:bg-gray-800/95 backdrop-blur-xl p-8 rounded-3xl shadow-2xl border border-gray-300/50 dark:border-gray-700/50">
              <div className="flex justify-between items-center mb-6">
                <h2 className="text-3xl lg:text-4xl font-bold text-gray-800 dark:text-white drop-shadow-md">
                  üìç {weather.name}, {weather.sys.country}
                </h2>
                <div className="bg-gradient-to-r from-blue-100 to-purple-100 dark:from-blue-900 dark:to-purple-900 px-4 py-2 rounded-2xl">
                  <p className="text-sm font-semibold text-gray-800 dark:text-white">
                    üìÖ {new Date().toLocaleDateString('th-TH', {
                      weekday: 'long',
                      year: 'numeric',
                      month: 'long',
                      day: 'numeric',
                    })}
                  </p>
                </div>
              </div>

              <div className="flex flex-col sm:flex-row items-center justify-between bg-gradient-to-r from-blue-50 via-purple-50 to-pink-50 dark:from-gray-700 dark:via-gray-800 dark:to-gray-700 rounded-2xl p-8 mb-6 shadow-inner">
                <div className="text-center sm:text-left mb-6 sm:mb-0">
                  <p className="text-7xl lg:text-8xl font-bold bg-clip-text text-transparent bg-gradient-to-r from-blue-600 to-purple-600 mb-2">
                    {Math.round(weather.main.temp)}¬∞C
                  </p>
                  <p className="text-xl lg:text-2xl capitalize text-gray-700 dark:text-gray-300 font-semibold">
                    {weather.weather[0].description}
                  </p>
                </div>
                <div className="flex justify-center transform hover:scale-110 transition-transform duration-300">
                  {weatherIcons[weather.weather[0].main] || weatherIcons['Clear']}
                </div>
              </div>

              <div className="grid grid-cols-2 lg:grid-cols-4 gap-6 mt-8">
                <div className="bg-gradient-to-br from-blue-100 to-blue-200 dark:from-blue-900/50 dark:to-blue-800/50 rounded-2xl p-6 flex flex-col items-center text-center shadow-lg hover:shadow-xl transition-shadow duration-300">
                  <div className="text-blue-500 mb-3">
                    <WiHumidity className="text-5xl" />
                  </div>
                  <p className="text-sm text-gray-600 dark:text-gray-400 font-semibold mb-1">‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡∏∑‡πâ‡∏ô</p>
                  <p className="text-2xl font-bold text-gray-800 dark:text-white">{weather.main.humidity}%</p>
                </div>

                <div className="bg-gradient-to-br from-green-100 to-green-200 dark:from-green-900/50 dark:to-green-800/50 rounded-2xl p-6 flex flex-col items-center text-center shadow-lg hover:shadow-xl transition-shadow duration-300">
                  <div className="text-green-500 mb-3">
                    <WiStrongWind className="text-5xl" />
                  </div>
                  <p className="text-sm text-gray-600 dark:text-gray-400 font-semibold mb-1">‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡∏•‡∏°</p>
                  <p className="text-2xl font-bold text-gray-800 dark:text-white">{weather.wind.speed} m/s</p>
                </div>

                <div className="bg-gradient-to-br from-red-100 to-orange-200 dark:from-red-900/50 dark:to-orange-800/50 rounded-2xl p-6 flex flex-col items-center text-center shadow-lg hover:shadow-xl transition-shadow duration-300">
                  <div className="text-red-500 mb-3 text-4xl">üå°Ô∏è</div>
                  <p className="text-sm text-gray-600 dark:text-gray-400 font-semibold mb-1">‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô</p>
                  <p className="text-2xl font-bold text-gray-800 dark:text-white">{Math.round(weather.main.feels_like)}¬∞C</p>
                </div>

                <div className="bg-gradient-to-br from-purple-100 to-pink-200 dark:from-purple-900/50 dark:to-pink-800/50 rounded-2xl p-6 flex flex-col items-center text-center shadow-lg hover:shadow-xl transition-shadow duration-300">
                  <div className="text-purple-500 mb-3 text-4xl">üëÅÔ∏è</div>
                  <p className="text-sm text-gray-600 dark:text-gray-400 font-semibold mb-1">‡∏ó‡∏±‡∏®‡∏ô‡∏ß‡∏¥‡∏™‡∏±‡∏¢</p>
                  <p className="text-2xl font-bold text-gray-800 dark:text-white">{weather.visibility / 1000} km</p>
                </div>
              </div>
            </div>
          )}

          {/* ‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡πà‡∏≠‡∏á‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß - ‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡πÉ‡∏´‡∏°‡πà */}
          <div className="bg-white/95 dark:bg-gray-800/95 backdrop-blur-xl p-8 rounded-3xl shadow-2xl border border-gray-300/50 dark:border-gray-700/50">
            <div className="text-center mb-8">
              <h2 className="text-3xl lg:text-4xl font-bold text-gray-800 dark:text-white mb-4">
                üó∫Ô∏è ‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡πà‡∏≠‡∏á‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß <span className="bg-clip-text text-transparent bg-gradient-to-r from-blue-500 to-purple-600">‡∏ö‡∏∏‡∏£‡∏µ‡∏£‡∏±‡∏°‡∏¢‡πå</span>
              </h2>
              <p className="text-gray-600 dark:text-gray-300 text-lg">‡∏™‡∏≥‡∏£‡∏ß‡∏à‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡πà‡∏≠‡∏á‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß‡∏ó‡∏µ‡πà‡∏ô‡πà‡∏≤‡∏™‡∏ô‡πÉ‡∏à‡πÉ‡∏ô‡∏ö‡∏∏‡∏£‡∏µ‡∏£‡∏±‡∏°‡∏¢‡πå</p>
            </div>
            {isClient && <TouristMap />}
          </div>
        </div>

        {/* ‡∏™‡πà‡∏ß‡∏ô‡∏Ç‡∏ß‡∏≤ - ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏à‡∏≤‡∏Å‡∏ö‡∏≠‡∏ó */}
        <div className="flex-1 w-full min-h-0 sticky top-6 h-fit">
          <div className="flex-1 w-full min-h-0 sticky top-6 h-fit">
            <Bot weather={weather} timeOfDay={timeOfDay} selectedCity={selectedCity} />
          </div>
        </div>
      </div>
    </div>
  );
}



















{/* ‡∏™‡πà‡∏ß‡∏ô‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà
      <div className="flex-1">
        <div className="bg-white/90 dark:bg-gray-800/90 p-6 rounded-xl shadow-lg">
          <h2 className="text-3xl font-semibold text-center mb-6">
            ‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡πà‡∏≠‡∏á‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß <span className="text-blue-500">‡∏ö‡∏∏‡∏£‡∏µ‡∏£‡∏±‡∏°‡∏¢‡πå</span>
          </h2>
          <div className="overflow-hidden rounded-lg shadow-lg">
            <iframe
              title="Tourist Attractions in Buriram"
              src={`https://www.google.com/maps/embed/v1/search?key=${googleMapsApiKey}&q=‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà+‡∏ó‡πà‡∏≠‡∏á‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß+${selectedCity}&zoom=13`}
              width="100%"
              height="450"
              style={{ border: 0 }}
              allowFullScreen={true}
              loading="lazy"
            ></iframe>
          </div>
        </div>
      </div> */}


{/* <div className="mt-10 w-full max-w-6xl">
        <div className="bg-white/90 dark:bg-gray-800/90 p-6 rounded-xl shadow-lg">
          <h2 className="text-3xl font-semibold text-center mb-6">
            ‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡πà‡∏≠‡∏á‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥
          </h2>

          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            {filteredSpots.map((spot, index) => (
              <div key={index} className="bg-gray-50 dark:bg-gray-700 rounded-xl overflow-hidden shadow-md transform hover:scale-[1.02] transition-transform">
                <div className="h-48 bg-gray-300 overflow-hidden">
                  <img
                    src={spot.image}
                    alt={spot.name}
                    className="w-full h-full object-cover"
                    onError={(e) => {
                      const target = e.target as HTMLImageElement;
                      // target.src = "/api/placeholder/400/320";
                    }}
                  />
                </div>
                <div className="p-4">
                  <h3 className="text-xl font-bold">{spot.name}</h3>
                  <p className="text-sm text-gray-500 dark:text-gray-400 mb-2">‡∏≠‡∏≥‡πÄ‡∏†‡∏≠: {spot.district}</p>
                  <p className="text-gray-700 dark:text-gray-300">{spot.description}</p>
                </div>
              </div>
            ))}
          </div>
        </div>
      </div> */}